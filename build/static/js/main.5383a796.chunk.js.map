{"version":3,"sources":["store/reducers/todo/types.ts","utils/rules.ts","hooks/useTypedSelector.ts","utils/cookies.ts","store/reducers/todo/action-creators.ts","store/reducers/auth/types.ts","store/reducers/auth/action-creators.ts","router/index.ts","store/reducers/action-creators.ts","hooks/useActions.ts","components/LoginForm.tsx","pages/Login.tsx","components/TodoList.tsx","pages/Event.tsx","components/RegistrationForm.tsx","pages/Registration.tsx","components/Navbar.tsx","components/AppRouter.tsx","App.tsx","store/reducers/auth/index.ts","store/reducers/todo/index.ts","store/reducers/index.ts","store/index.ts","index.tsx"],"names":["TodoActionEnum","rules","message","required","useTypedSelector","useSelector","setCookie","name","val","date","Date","value","setTime","getTime","document","cookie","toUTCString","getCookie","parts","split","length","ppop","pop","shift","deleteCookie","AuthActionEnum","baseUrl","TodoActionCreators","setIsLoading","payload","type","SET_IS_LOADING","setError","SET_ERROR","getTodo","GET_TODO","addTodo","ADD_TODO","updTodo","UPDATE_TODO","delTodo","DELETE_TODO","getTodoList","token","dispatch","a","axios","get","headers","response","status","data","createTodo","taskDescr","loading","post","description","updateTodo","taskId","choosenTask","put","completed","deleteTodo","delete","RouteNames","authorization","Authorization","AuthActionCreators","setUser","user","SET_USER","setIsAuth","auth","SET_AUTH","setIsSuccess","SET_IS_SUCCESS","getCurrentUser","registration","setTimeout","login","email","password","logout","allActionCreators","useActions","useDispatch","bindActionCreators","LoginForm","state","error","isLoading","useState","setEmail","setPassword","onFinish","style","color","Item","label","onChange","e","target","placeholder","Password","htmlType","to","float","Login","isSuccess","showIcon","position","left","right","top","justify","align","className","TodoList","event","setEvent","customLoading","setCustomLoading","todo","todoList","useEffect","tip","Search","enterButton","size","maxWidth","padding","margin","onSearch","map","width","checked","textDecoration","_id","onClick","fontSize","cursor","Event","display","RegistrationForm","username","setUsername","minLength","Registration","title","publicRoutes","path","LOGIN","exact","component","REGISTRATION","privateRoutes","EVENT","Navbar","router","useHistory","isAuth","Header","height","theme","mode","selectable","push","AppRouter","route","App","Content","initialState","action","concat","filter","rootReducer","combineReducers","reducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.5383a796.chunk.js","sourcesContent":["import { ITodo } from \"../../../models/ITodo\";\r\n\r\nexport interface TodoState {\r\n    todoList: ITodo[];\r\n    isLoading: boolean;\r\n    error: string;\r\n}\r\n\r\nexport enum TodoActionEnum {\r\n    GET_TODO = 'GET_TODO',\r\n    ADD_TODO = 'ADD_TODO',\r\n    UPDATE_TODO = 'UPDATE_TODO',\r\n    DELETE_TODO = 'DELETE_TODO',\r\n    SET_IS_LOADING = 'SET_IS_LOADING',\r\n    SET_ERROR = 'SET_ERROR'\r\n}\r\n\r\nexport interface GetTodoAction {\r\n    type: TodoActionEnum.GET_TODO;\r\n    payload: ITodo[];\r\n}\r\n\r\nexport interface AddTodoAction {\r\n    type: TodoActionEnum.ADD_TODO;\r\n    payload: ITodo;\r\n}\r\n\r\nexport interface UpdateTodoAction {\r\n    type: TodoActionEnum.UPDATE_TODO;\r\n    payload: ITodo;\r\n}\r\n\r\nexport interface DeleteTodoAction {\r\n    type: TodoActionEnum.DELETE_TODO;\r\n    payload: string | undefined;\r\n}\r\n\r\nexport interface SetIsLoadingAction {\r\n    type: TodoActionEnum.SET_IS_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\nexport interface SetErrorAction {\r\n    type: TodoActionEnum.SET_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport type TodoAction =\r\n    GetTodoAction\r\n    | AddTodoAction\r\n    | UpdateTodoAction\r\n    | DeleteTodoAction\r\n    | SetIsLoadingAction\r\n    | SetErrorAction\r\n\r\n","export const rules = {\r\n    required: (message: string = 'Обязательное поле') => ({\r\n        required: true,\r\n        message,\r\n    })\r\n}","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;","export function setCookie(name: string, val: string) {\r\n    const date = new Date();\r\n    const value = val;\r\n    // Set it expire in 7 days\r\n    date.setTime(date.getTime() + (7 * 24 * 60 * 60 * 1000));\r\n    // Set it\r\n    document.cookie = name + \"=\" + value + \"; expires=\" + date.toUTCString() + \"; path=/\";\r\n}\r\n\r\nexport function getCookie(name: string) {\r\n    const value = \"; \" + document.cookie;\r\n    const parts = value.split(\"; \" + name + \"=\");\r\n\r\n    if (parts.length === 2) {\r\n        const ppop = parts.pop();\r\n        if (ppop) {\r\n            return ppop.split(\";\").shift();\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n    const date = new Date();\r\n    // Set it expire in -1 days\r\n    date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\r\n    // Set it\r\n    document.cookie = name + \"=; expires=\" + date.toUTCString() + \"; path=/\";\r\n}","import axios from \"axios\";\r\nimport { AppDispatch } from \"../..\";\r\nimport { ITodo, ITodoListRequest, ITodoRequest } from \"../../../models/ITodo\";\r\nimport { GetTodoAction, SetIsLoadingAction, SetErrorAction, TodoActionEnum, AddTodoAction, DeleteTodoAction, UpdateTodoAction } from \"./types\";\r\n\r\nconst baseUrl = 'https://api-nodejs-todolist.herokuapp.com/task';\r\n\r\nexport const TodoActionCreators = {\r\n    setIsLoading: (payload: boolean): SetIsLoadingAction => ({ type: TodoActionEnum.SET_IS_LOADING, payload }),\r\n    setError: (payload: string): SetErrorAction => ({ type: TodoActionEnum.SET_ERROR, payload }),\r\n    getTodo: (payload: ITodo[]): GetTodoAction => ({ type: TodoActionEnum.GET_TODO, payload }),\r\n    addTodo: (payload: ITodo): AddTodoAction => ({ type: TodoActionEnum.ADD_TODO, payload }),\r\n    updTodo: (payload: ITodo): UpdateTodoAction => ({ type: TodoActionEnum.UPDATE_TODO, payload }),\r\n    delTodo: (payload: string): DeleteTodoAction => ({ type: TodoActionEnum.DELETE_TODO, payload }),\r\n\r\n    getTodoList: (token: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            dispatch(TodoActionCreators.setIsLoading(true));\r\n            const response = await axios.get<ITodoListRequest>(baseUrl, {\r\n                headers: {\r\n                    \"Authorization\": token\r\n                }\r\n            });\r\n            if (response.status === 200) {\r\n                dispatch(TodoActionCreators.getTodo(response.data.data))\r\n            }\r\n            dispatch(TodoActionCreators.setIsLoading(false));\r\n        } catch (e) {\r\n            dispatch(TodoActionCreators.setError('Упс! Что-то пошло не так'));\r\n        }\r\n    },\r\n\r\n    createTodo: (taskDescr: string, loading: Function, token: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            loading(true);\r\n            const response = await axios.post<ITodoRequest>(baseUrl, { description: taskDescr }, {\r\n                headers: {\r\n                    \"Authorization\": token\r\n                }\r\n            });\r\n            if (response.status === 201) {\r\n                dispatch(TodoActionCreators.addTodo(response.data.data));\r\n            }\r\n            loading(false);\r\n\r\n        } catch (e) {\r\n            dispatch(TodoActionCreators.setError('При создании таски произошла ошибка'));\r\n        }\r\n    },\r\n\r\n    updateTodo: (taskId: string, choosenTask: boolean, token: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const response = await axios.put<ITodoRequest>(`${baseUrl}/${taskId}`, { completed: choosenTask }, {\r\n                headers: {\r\n                    \"Authorization\": token\r\n                }\r\n            });\r\n            if (response.status === 200) {\r\n                dispatch(TodoActionCreators.updTodo(response.data.data));\r\n            }\r\n        } catch (e) {\r\n            dispatch(TodoActionCreators.setError('Что-то пошло не так'));\r\n        }\r\n    },\r\n\r\n    deleteTodo: (taskId: string, token: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const response = await axios.delete<ITodoRequest>(`${baseUrl}/${taskId}`, {\r\n                headers: {\r\n                    \"Authorization\": token\r\n                }\r\n            });\r\n            if (response.status === 200) {\r\n                dispatch(TodoActionCreators.delTodo(taskId));\r\n            }\r\n        } catch (e) {\r\n            dispatch(TodoActionCreators.setError('При удалении произошла ошибка'));\r\n        }\r\n    }\r\n}","import { IUser } from \"../../../models/IUser\";\r\n\r\nexport interface AuthState {\r\n    isAuth: boolean;\r\n    user: IUser;\r\n    isLoading: boolean;\r\n    isSuccess: boolean;\r\n    error: string;\r\n}\r\n\r\nexport enum AuthActionEnum {\r\n    SET_AUTH = 'SET_AUTH',\r\n    SET_USER = 'SET_USER',\r\n    SET_ERROR = 'SET_ERROR',\r\n    SET_IS_LOADING = 'SET_IS_LOADING',\r\n    SET_IS_SUCCESS = 'SET_IS_SUCCESS'\r\n}\r\n\r\nexport interface SetAuthAction {\r\n    type: AuthActionEnum.SET_AUTH;\r\n    payload: boolean;\r\n}\r\n\r\nexport interface SetErrorAction {\r\n    type: AuthActionEnum.SET_ERROR;\r\n    payload: string;\r\n}\r\n\r\nexport interface SetUserAction {\r\n    type: AuthActionEnum.SET_USER;\r\n    payload: IUser;\r\n}\r\n\r\nexport interface SetIsLoadingAction {\r\n    type: AuthActionEnum.SET_IS_LOADING;\r\n    payload: boolean;\r\n}\r\n\r\nexport interface SetIsSuccessAction {\r\n    type: AuthActionEnum.SET_IS_SUCCESS;\r\n    payload: boolean;\r\n}\r\n\r\nexport type AuthAction =\r\n    SetAuthAction\r\n    | SetErrorAction\r\n    | SetUserAction\r\n    | SetIsLoadingAction\r\n    | SetIsSuccessAction\r\n\r\n","import axios from \"axios\";\r\nimport { AppDispatch } from \"../..\";\r\nimport { IData, IUser } from \"../../../models/IUser\";\r\nimport { deleteCookie, getCookie, setCookie } from \"../../../utils/cookies\";\r\nimport { TodoActionCreators } from \"../todo/action-creators\";\r\nimport { AuthActionEnum, SetAuthAction, SetErrorAction, SetIsLoadingAction, SetIsSuccessAction, SetUserAction } from \"./types\";\r\n\r\nconst baseUrl = 'https://api-nodejs-todolist.herokuapp.com/user';\r\n\r\nconst authorization = {\r\n    Authorization: `Bearer ${getCookie('token')}`\r\n}\r\n\r\nexport const AuthActionCreators = {\r\n    setUser: (user: IUser): SetUserAction => ({ type: AuthActionEnum.SET_USER, payload: user }),\r\n    setIsAuth: (auth: boolean): SetAuthAction => ({ type: AuthActionEnum.SET_AUTH, payload: auth }),\r\n    setIsLoading: (payload: boolean): SetIsLoadingAction => ({ type: AuthActionEnum.SET_IS_LOADING, payload }),\r\n    setIsSuccess: (payload: boolean): SetIsSuccessAction => ({ type: AuthActionEnum.SET_IS_SUCCESS, payload }),\r\n    setError: (payload: string): SetErrorAction => ({ type: AuthActionEnum.SET_ERROR, payload }),\r\n\r\n    getCurrentUser: () => async (dispatch: AppDispatch) => {\r\n        try {\r\n            const response = await axios.get<IUser>(`${baseUrl}/me`, {\r\n                headers: {\r\n                    ...authorization\r\n                }\r\n            });\r\n            if (response.status === 200) {\r\n                dispatch(AuthActionCreators.setUser(response.data));\r\n            }\r\n        } catch (e) {\r\n            dispatch(AuthActionCreators.setError('Произошла ошибка в авторизации'));\r\n        }\r\n    },\r\n\r\n    registration: (data: IUser) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            dispatch(AuthActionCreators.setIsLoading(true));\r\n            const response = await axios.post<IData>(`${baseUrl}/register`, data);\r\n            if (response.status === 201) {\r\n                dispatch(AuthActionCreators.setIsSuccess(true));\r\n                setTimeout(() => {\r\n                    dispatch(AuthActionCreators.setIsSuccess(false));\r\n                }, 4000)\r\n            } else {\r\n                dispatch(AuthActionCreators.setIsSuccess(false));\r\n            }\r\n            dispatch(AuthActionCreators.setIsLoading(false));\r\n        } catch (e: any) {\r\n            if (e.response.status >= '404') {\r\n                dispatch(AuthActionCreators.setError('Произошла какая-то ошибка'));\r\n            } else {\r\n                dispatch(AuthActionCreators.setError('Пользователь с таким Email уже существует'));\r\n                setTimeout(() => {\r\n                    dispatch(AuthActionCreators.setError(''));\r\n                }, 4000)\r\n            }\r\n\r\n        }\r\n    },\r\n\r\n    login: (email: string, password: string) => async (dispatch: AppDispatch) => {\r\n        try {\r\n            dispatch(AuthActionCreators.setIsLoading(true));\r\n            const response = await axios.post<IData>(`${baseUrl}/login`, { email, password });\r\n            if (response.status === 200) {\r\n                setCookie('token', `${response.data.token}`);\r\n                dispatch(AuthActionCreators.setUser(response.data.user));\r\n                dispatch(AuthActionCreators.setIsAuth(true));\r\n            }\r\n            dispatch(AuthActionCreators.setIsLoading(false));\r\n\r\n        } catch (e) {\r\n            dispatch(AuthActionCreators.setError('Некорректный логин или пароль'));\r\n        }\r\n    },\r\n\r\n    logout: () => async (dispatch: AppDispatch) => {\r\n        deleteCookie('token');\r\n        dispatch(AuthActionCreators.setError(''));\r\n        dispatch(AuthActionCreators.setIsAuth(false));\r\n        dispatch(TodoActionCreators.getTodo([]));\r\n    }\r\n}","import React from \"react\";\r\nimport Login from \"../pages/Login\";\r\nimport Event from '../pages/Event';\r\nimport Registration from \"../pages/Registration\";\r\n\r\nexport interface IRoute {\r\n    path: string;\r\n    component: React.ComponentType;\r\n    exact?: boolean;\r\n}\r\n\r\nexport enum RouteNames {\r\n    LOGIN = '/login',\r\n    EVENT = '/',\r\n    REGISTRATION = '/registration'\r\n}\r\n\r\nexport const publicRoutes: IRoute[] = [\r\n    { path: RouteNames.LOGIN, exact: true, component: Login },\r\n    { path: RouteNames.REGISTRATION, exact: true, component: Registration }\r\n]\r\n\r\nexport const privateRoutes: IRoute[] = [\r\n    { path: RouteNames.EVENT, exact: true, component: Event }\r\n]","import { AuthActionCreators } from \"./auth/action-creators\";\r\nimport { TodoActionCreators } from \"./todo/action-creators\";\r\n\r\nexport const allActionCreators = {\r\n    ...AuthActionCreators,\r\n    ...TodoActionCreators\r\n}","import { useDispatch } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\";\r\nimport { allActionCreators } from \"../store/reducers/action-creators\";\r\n\r\nexport const useActions = () => {\r\n    const dispatch = useDispatch();\r\n    return bindActionCreators(allActionCreators, dispatch);\r\n}","import React, { FC, useState } from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { rules } from \"../utils/rules\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginForm: FC = () => {\r\n  const { error, isLoading } = useTypedSelector((state) => state.auth);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const { login } = useActions();\r\n\r\n  const onSubmit = () => {\r\n    login(email, password);\r\n  };\r\n\r\n  return (\r\n    <Form onFinish={onSubmit}>\r\n      {error && <div style={{ color: \"red\" }}>{error}</div>}\r\n      <Form.Item\r\n        label=\"Email\"\r\n        name=\"email\"\r\n        rules={[rules.required(\"Пожалуйста введите email\")]}\r\n      >\r\n        <Input\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          value={email}\r\n          placeholder=\"Введите email\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item\r\n        label=\"Пароль\"\r\n        name=\"password\"\r\n        rules={[rules.required(\"Пожалуйста введите пароль!\")]}\r\n      >\r\n        <Input.Password\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          placeholder=\"Введите пароль\"\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n          Войти\r\n        </Button>\r\n        <Link to=\"/registration\">\r\n          <Button type=\"default\" style={{ float: \"right\" }}>\r\n            Регистрация\r\n          </Button>\r\n        </Link>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { FC } from \"react\";\r\nimport { Alert, Card, Layout, Row } from \"antd\";\r\nimport LoginForm from \"../components/LoginForm\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst Login: FC = () => {\r\n  const { isSuccess } = useTypedSelector((state) => state.auth);\r\n  return (\r\n    <Layout>\r\n      {isSuccess && (\r\n        <Alert\r\n          message=\"Success\"\r\n          description={\"Вы успешно зарегестрировались\"}\r\n          type=\"success\"\r\n          showIcon\r\n          style={{ position: \"absolute\", left: \"0\", right: \"0\", top: \"64px\" }}\r\n        />\r\n      )}\r\n      <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n        <Card>\r\n          <LoginForm />\r\n        </Card>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { FC, useEffect, useState } from \"react\";\r\nimport { Input, Row, Spin, Checkbox } from \"antd\";\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport { getCookie } from \"../utils/cookies\";\r\n\r\nconst TodoList: FC = () => {\r\n  const [event, setEvent] = useState(\"\");\r\n  const [customLoading, setCustomLoading] = useState(false);\r\n  const { todoList, isLoading } = useTypedSelector((state) => state.todo);\r\n  const { getTodoList, createTodo, updateTodo, deleteTodo } = useActions();\r\n  const token = getCookie(\"token\") || \"\";\r\n\r\n  useEffect(() => {\r\n    getTodoList(token);\r\n  }, []);\r\n\r\n  const handlerAddEvent = () => {\r\n    if (event) {\r\n      createTodo(event, setCustomLoading, token);\r\n      setEvent(\"\");\r\n    }\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n        <Spin tip=\"Loading...\" />\r\n      </Row>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"todo-list\">\r\n      <Input.Search\r\n        value={event}\r\n        placeholder=\"Добавьте задачу\"\r\n        enterButton=\"Добавить\"\r\n        size=\"large\"\r\n        style={{\r\n          maxWidth: \"520px\",\r\n          padding: \"10px 10px 5px 10px\",\r\n          margin: \"0 auto\",\r\n        }}\r\n        onChange={(e) => setEvent(e.target.value)}\r\n        onSearch={handlerAddEvent}\r\n        loading={customLoading}\r\n      />\r\n      <div className=\"todo-list__items\">\r\n        {todoList.map((todo) => (\r\n          <div key={todo._id} className=\"todo-list__item\">\r\n            <div className=\"todo-list__descr\" style={{ width: \"100%\" }}>\r\n              <Checkbox\r\n                checked={todo.completed}\r\n                style={{\r\n                  width: \"100%\",\r\n                  textDecoration: `${todo.completed ? \"line-through\" : \"none\"}`,\r\n                }}\r\n                onChange={(e) => updateTodo(todo._id, e.target.checked, token)}\r\n              >\r\n                {todo.description}\r\n              </Checkbox>\r\n            </div>\r\n            <i\r\n              className=\"far fa-times-circle todo-list__btn\"\r\n              onClick={() => deleteTodo(todo._id, token)}\r\n              style={{\r\n                fontSize: \"19px\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            ></i>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { FC } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport TodoList from \"../components/TodoList\";\r\n\r\nconst Event: FC = () => {\r\n  return (\r\n    <Layout style={{ display: \"block\" }}>\r\n      <TodoList />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Event;\r\n","import React, { FC, useState } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { rules } from \"../utils/rules\";\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { IUser } from \"../models/IUser\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst RegistrationForm: FC = () => {\r\n  const { isSuccess, isLoading } = useTypedSelector((state) => state.auth);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const { registration } = useActions();\r\n\r\n  const onSubmit = () => {\r\n    const data: IUser = {\r\n      email,\r\n      password,\r\n      name: username,\r\n    };\r\n    registration(data);\r\n  };\r\n  return (\r\n    <>\r\n      {isSuccess && <Redirect to=\"/login\" />}\r\n      <Form onFinish={onSubmit}>\r\n        <Form.Item\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          rules={[rules.required(\"Пожалуйста введите email!\")]}\r\n        >\r\n          <Input\r\n            type=\"email\"\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            value={email}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Имя пользователя\"\r\n          name=\"username\"\r\n          rules={[rules.required(\"Пожалуйста введите имя пользователя!\")]}\r\n        >\r\n          <Input\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            value={username}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Пароль\"\r\n          name=\"password\"\r\n          rules={[rules.required(\"Пожалуйста введите пароль!\")]}\r\n        >\r\n          <Input.Password\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            minLength={8}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\" loading={isLoading}>\r\n            Отправить\r\n          </Button>\r\n          <Link to=\"/login\">\r\n            <Button type=\"link\" style={{ float: \"right\" }}>\r\n              Уже есть аккаунт?\r\n            </Button>\r\n          </Link>\r\n        </Form.Item>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RegistrationForm;\r\n","import React, { FC } from \"react\";\r\nimport { Alert, Card, Layout, Row } from \"antd\";\r\nimport RegistrationForm from \"../components/RegistrationForm\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst Registration: FC = () => {\r\n  const { error } = useTypedSelector((state) => state.auth);\r\n  return (\r\n    <Layout>\r\n      {error && (\r\n        <Alert\r\n          message=\"Error\"\r\n          description={error}\r\n          type=\"error\"\r\n          showIcon\r\n          style={{ position: \"absolute\", left: \"0\", right: \"0\", top: \"64px\" }}\r\n        />\r\n      )}\r\n      <Row justify=\"center\" align=\"middle\" className=\"h100\">\r\n        <Card title=\"Регистрация\">\r\n          <RegistrationForm />\r\n        </Card>\r\n      </Row>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Registration;\r\n","import React, { FC } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Layout, Row, Menu } from \"antd\";\r\nimport { RouteNames } from \"../router\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\nimport { useActions } from \"../hooks/useActions\";\r\n\r\nconst Navbar: FC = () => {\r\n  const router = useHistory();\r\n  const { isAuth, user } = useTypedSelector((state) => state.auth);\r\n  const { logout } = useActions();\r\n\r\n  return (\r\n    <Layout.Header>\r\n      <Row justify=\"end\" align=\"middle\" style={{ height: \"64px\" }}>\r\n        {isAuth ? (\r\n          <>\r\n            <div style={{ color: \"white\" }}>{user.name}</div>\r\n            <Menu theme=\"dark\" mode=\"horizontal\" selectable={false}>\r\n              <Menu.Item key={1} onClick={() => logout()}>\r\n                Выйти\r\n              </Menu.Item>\r\n            </Menu>\r\n          </>\r\n        ) : (\r\n          <Menu theme=\"dark\" mode=\"vertical\" selectable={false}>\r\n            <Menu.Item key={1} onClick={() => router.push(RouteNames.LOGIN)}>\r\n              Войти\r\n            </Menu.Item>\r\n          </Menu>\r\n        )}\r\n      </Row>\r\n    </Layout.Header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { FC } from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { privateRoutes, publicRoutes, RouteNames } from \"../router\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst AppRouter: FC = () => {\r\n  const { isAuth } = useTypedSelector((state) => state.auth);\r\n\r\n  return isAuth ? (\r\n    <Switch>\r\n      {privateRoutes.map((route) => (\r\n        <Route\r\n          key={route.path}\r\n          path={route.path}\r\n          exact={route.exact}\r\n          component={route.component}\r\n        />\r\n      ))}\r\n      <Redirect to={RouteNames.EVENT} />\r\n    </Switch>\r\n  ) : (\r\n    <Switch>\r\n      {publicRoutes.map((route) => (\r\n        <Route\r\n          key={route.path}\r\n          path={route.path}\r\n          exact={route.exact}\r\n          component={route.component}\r\n        />\r\n      ))}\r\n      <Redirect to={RouteNames.LOGIN} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { FC, useEffect } from \"react\";\nimport { Layout } from \"antd\";\nimport Navbar from \"./components/Navbar\";\nimport AppRouter from \"./components/AppRouter\";\nimport { useActions } from \"./hooks/useActions\";\nimport \"./App.css\";\nimport { getCookie } from \"./utils/cookies\";\n\nconst App: FC = () => {\n  const { getCurrentUser, setIsAuth } = useActions();\n\n  useEffect(() => {\n    if (getCookie(\"token\")) {\n      getCurrentUser();\n      setIsAuth(true);\n    }\n  }, []);\n\n  return (\n    <div>\n      <Layout>\n        <Navbar />\n        <Layout.Content>\n          <AppRouter />\n        </Layout.Content>\n      </Layout>\n    </div>\n  );\n};\n\nexport default App;\n","import { IUser } from '../../../models/IUser';\r\nimport { AuthState, AuthAction, AuthActionEnum } from './types';\r\n\r\nconst initialState: AuthState = {\r\n    isAuth: false,\r\n    error: '',\r\n    isLoading: false,\r\n    isSuccess: false,\r\n    user: {} as IUser,\r\n}\r\n\r\nexport default function authReducer(state = initialState, action: AuthAction): AuthState {\r\n    switch (action.type) {\r\n        case AuthActionEnum.SET_AUTH:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case AuthActionEnum.SET_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.payload,\r\n                isLoading: false,\r\n            }\r\n        case AuthActionEnum.SET_IS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isSuccess: action.payload,\r\n            }\r\n        case AuthActionEnum.SET_IS_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: action.payload,\r\n            }\r\n        case AuthActionEnum.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { TodoAction, TodoActionEnum, TodoState } from \"./types\"\r\n\r\nconst initialState: TodoState = {\r\n    todoList: [],\r\n    isLoading: false,\r\n    error: ''\r\n}\r\n\r\nexport default function todoReducer(state = initialState, action: TodoAction): TodoState {\r\n    switch (action.type) {\r\n        case TodoActionEnum.GET_TODO:\r\n            return { ...state, todoList: action.payload }\r\n        case TodoActionEnum.ADD_TODO:\r\n            return { ...state, todoList: state.todoList.concat(action.payload) }\r\n        case TodoActionEnum.UPDATE_TODO:\r\n            return { ...state, todoList: state.todoList.map(todo => todo._id === action.payload._id ? action.payload : todo) }\r\n        case TodoActionEnum.DELETE_TODO:\r\n            return { ...state, todoList: state.todoList.filter(todo => todo._id !== action.payload) }\r\n        case TodoActionEnum.SET_IS_LOADING:\r\n            return { ...state, isLoading: action.payload }\r\n        case TodoActionEnum.SET_ERROR:\r\n            return { ...state, error: action.payload, isLoading: false }\r\n        default:\r\n            return state\r\n    }\r\n}","import auth from './auth';\r\nimport todo from './todo';\r\n\r\nexport default {\r\n    auth,\r\n    todo\r\n}","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\nimport reducers from './reducers';\r\n\r\nconst rootReducer = combineReducers(reducers);\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}